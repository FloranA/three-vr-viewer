0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files (x86)\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish',
1 verbose cli   '--force' ]
2 info using npm@2.5.1
3 info using node@v0.12.1
4 warn using --force I sure hope you know what you are doing.
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: 'c:\\Users\\Flux\\Documents\\projects\\three-vr-viewer',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory C:\Users\Flux\AppData\Roaming\npm-cache\three-vr-viewer\1.0.0\package.tgz not in flight; packing
10 verbose tar pack [ 'C:\\Users\\Flux\\AppData\\Roaming\\npm-cache\\three-vr-viewer\\1.0.0\\package.tgz',
10 verbose tar pack   'c:\\Users\\Flux\\Documents\\projects\\three-vr-viewer' ]
11 verbose tarball C:\Users\Flux\AppData\Roaming\npm-cache\three-vr-viewer\1.0.0\package.tgz
12 verbose folder c:\Users\Flux\Documents\projects\three-vr-viewer
13 info prepublish three-vr-viewer@1.0.0
14 verbose addLocalTarball adding from inside cache C:\Users\Flux\AppData\Roaming\npm-cache\three-vr-viewer\1.0.0\package.tgz
15 silly cache afterAdd three-vr-viewer@1.0.0
16 verbose afterAdd C:\Users\Flux\AppData\Roaming\npm-cache\three-vr-viewer\1.0.0\package\package.json not in flight; writing
17 verbose afterAdd C:\Users\Flux\AppData\Roaming\npm-cache\three-vr-viewer\1.0.0\package\package.json written
18 silly publish { name: 'three-vr-viewer',
18 silly publish   author: { name: 'mflux' },
18 silly publish   license: 'MIT',
18 silly publish   version: '1.0.0',
18 silly publish   description: 'One-liner to start THREE.js WebVR projects.',
18 silly publish   main: 'index.js',
18 silly publish   scripts:
18 silly publish    { publish: 'npm run build-js-publish && npm run build-copy',
18 silly publish      dev: 'npm run build-js-dev && npm run build-copy',
18 silly publish      'build-js-dev': 'browserify index.js -t [ babelify --presets [es2015 ] ] > build/three-vr-viewer.js',
18 silly publish      'build-js-publish': 'browserify index.js -t [ babelify --presets [es2015 ] ] | uglifyjs -cm > build/three-vr-viewer.js',
18 silly publish      'build-copy': 'copyfiles -f build/*.js example/js' },
18 silly publish   dependencies: { events: '^1.0.2' },
18 silly publish   devDependencies:
18 silly publish    { 'babel-preset-es2015': '^6.14.0',
18 silly publish      babelify: '^7.3.0',
18 silly publish      browserify: '^13.1.0',
18 silly publish      copyfiles: '^1.0.0',
18 silly publish      'uglify-js': '^2.4.16' },
18 silly publish   bugs: { url: 'https://github.com/mflux/three-vr-viewer/issues' },
18 silly publish   homepage: 'https://github.com/mflux/three-vr-viewer',
18 silly publish   keywords: [ 'three', 'js', 'webvr', 'vr' ],
18 silly publish   readme: '## THREE.js VR Viewer\r\n\r\n![Preview Image](http://i.imgur.com/OGgcuQU.png)\r\n\r\nOne-liner to start THREE.js WebVR projects. This project serves as a super beginner friendly way to build WebVR experiments.\r\n\r\nFor now this only works in the [WebVR enabled Chromium build](https://webvr.info/get-chrome/).\r\n\r\n## Setup ##\r\n\r\nInclude the script from build/three-vr-viewer.js in your project, after THREE.js\r\n\r\n    <script type="text/javascript" src="js/three.min.js"></script>\r\n    <script type="text/javascript" src="js/three-vr-viewer.js"></script>\r\n\r\nIn your own project:\r\n\r\n    VRViewer();\r\n\r\nThat\'s literally it.\r\n\r\n## Exposing THREE.js objects ##\r\n\r\n**VRViewer()** returns several objects. You can destructure this object like so:\r\n\r\n    const { scene, camera, renderer, events, toggleVR, controllers } = VRViewer();\r\n\r\nNow you have access to the scene, camera, etc.\r\n\r\nThe Events object can run callbacks, for example, if you want something to change every frame:\r\n\r\n    events.on( \'tick\', function( dt ){\r\n      box.rotation.x += 0.4 * dt;\r\n    });\r\n\r\nYou\'re also given the VR controllers, if present, as an array of controllers[]. They are, for the time being, [THREE.ViveController](https://github.com/mrdoob/three.js/blob/dev/examples/js/ViveController.js) objects so you can bind events to them like:\r\n\r\n      controllers[0].addEventListener(\'triggerdown\', function(){\r\n        console.log(\'controller trigger pressed!\');\r\n      });\r\n\r\n## Options ##\r\n**VRViewer()** can take several options:\r\n\r\n- **autoEnter:** (default false). Automatically enter VR without having to push the button, after 1 second. Extremely useful for VR development.\r\n- **antiAlias:** (default true). Anti-aliasing. This reduces performance if on.\r\n- **clearColor:** (default 0x505050). Hexadecimal for background color.\r\n- **emptyRoom:** (default true). Creates an empty room so you\'re not floating in space.\r\n- **standing:** (default true). Whether or not VRControls is a standing experience.\r\n- **loadControllers:** (default true). Attempts to load controller models.\r\n- **vrButton:** (default true). Whether or not to show the "Enter VR" button.\r\n- **pathToControllers:** (default \'models/obj/vive-controller/\'). Path where the Vive controller model is located. In case you need to override it.\r\n- **controllerModelName:** (default \'vr_controller_vive_1_5.obj\'). Filename of the Vive controller model. In case you need to override it.\r\n- **controllerTextureMap:** (default \'onepointfive_texture.png\'). Filename of the Vive controller texture map.\r\n- **controllerSpecMap:** (default \'onepointfive_spec.png\'). Filename of the Vive controller specular map.\r\n\r\nFor example:\r\n\r\n    VRViewer({\r\n      autoEnter: true,\r\n      emptyRoom: true\r\n    });\r\n\r\nThis automatically enters VR and enables the empty room.\r\n\r\n## Installing from NPM\r\n\r\n    npm install\r\n    npm run dev\r\n\r\n\r\n## Examples ##\r\n[Start a web server](http://www.2ality.com/2014/06/simple-http-server.html) at three-vr-viewer/example and then navigate to localhost:8000\r\n\r\n\r\n## Notes ##\r\n* This module assumes the existence of THREE.js in global scope somewhere. Meaning you should have included it with <script> tag before including three-vr-viewer.js.\r\n* You can also include this as an ES6 module directly by doing\r\n    import create from \'VRViewer\' if you\'re installing it from NPM.\r\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '579b424f00419269787a357e909a3e8ada9d64fc',
18 silly publish   _id: 'three-vr-viewer@1.0.0',
18 silly publish   _shasum: '90e43cbb7751baf2ffee08d595d892b647620826',
18 silly publish   _from: '.' }
19 silly mapToRegistry name three-vr-viewer
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/three-vr-viewer
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading C:\Users\Flux\AppData\Roaming\npm-cache\three-vr-viewer\1.0.0\package.tgz
25 verbose request uri https://registry.npmjs.org/three-vr-viewer
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 4:25:50 PM
28 verbose request using bearer token for auth
29 verbose request id 9625dffcd4c02d75
30 http request PUT https://registry.npmjs.org/three-vr-viewer
31 http 403 https://registry.npmjs.org/three-vr-viewer
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Mon, 05 Sep 2016 23:25:57 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-sjc3132-SJC',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1473117947.792125,VS0,VE9289',
32 verbose headers   vary: 'Accept-Encoding' }
33 verbose request invalidating C:\Users\Flux\AppData\Roaming\npm-cache\registry.npmjs.org\three-vr-viewer on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : three-vr-viewer
35 verbose stack     at CachingRegistryClient.<anonymous> (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:254:14)
35 verbose stack     at Request._callback (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:178:14)
35 verbose stack     at Request.self.callback (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:344:22)
35 verbose stack     at Request.emit (events.js:110:17)
35 verbose stack     at Request.<anonymous> (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1239:14)
35 verbose stack     at Request.emit (events.js:129:20)
35 verbose stack     at IncomingMessage.<anonymous> (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1187:12)
35 verbose stack     at IncomingMessage.emit (events.js:129:20)
35 verbose stack     at _stream_readable.js:908:16
35 verbose stack     at process._tickCallback (node.js:355:11)
36 verbose statusCode 403
37 verbose pkgid three-vr-viewer
38 verbose cwd c:\Users\Flux\Documents\projects\three-vr-viewer
39 error Windows_NT 6.3.9600
40 error argv "c:\\Program Files (x86)\\nodejs\\node.exe" "c:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish" "--force"
41 error node v0.12.1
42 error npm  v2.5.1
43 error code E403
44 error "You cannot publish over the previously published version 1.0.0." : three-vr-viewer
45 error If you need help, you may report this error at:
45 error     <http://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
